#include <bits/stdc++.h>

using namespace std;

string ltrim(const string &);
string rtrim(const string &);

int decimalToBinary(int n){
    int binaryNum[32];
    
    int i=0;
    while(n>0){
        binaryNum[i]=n%2;
        n = n/2;
        i++;
    }
    
    int start = 0;
    int end = i-1;
    
    while (start < end) {
        // Swap arr[start] and arr[end]
        int temp = binaryNum[start];
        binaryNum[start] = binaryNum[end];
        binaryNum[end] = temp;

        // Move start towards the end
        start++;

        // Move end towards the start
        end--;
    }
    
    int maxCount = 0;
    int count = 0;
    for (int k=0; k<i; ++k){
        
        if (binaryNum[k]==1){
            count++;
            if (count > maxCount){
                maxCount = count;
            }
        }else{
            count = 0;
        }
        
    }
    
    return maxCount;
}

int main()
{
    string n_temp;
    getline(cin, n_temp);

    int n = stoi(ltrim(rtrim(n_temp)));
    
    cout << decimalToBinary(n);

    return 0;
}

string ltrim(const string &str) {
    string s(str);

    s.erase(
        s.begin(),
        find_if(s.begin(), s.end(), not1(ptr_fun<int, int>(isspace)))
    );

    return s;
}

string rtrim(const string &str) {
    string s(str);

    s.erase(
        find_if(s.rbegin(), s.rend(), not1(ptr_fun<int, int>(isspace))).base(),
        s.end()
    );

    return s;
}
